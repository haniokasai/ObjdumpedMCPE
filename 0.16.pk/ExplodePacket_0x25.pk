  ce3b30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  ce3b34:	b089      	sub	sp, #36	; 0x24
  ce3b36:	4605      	mov	r5, r0
  ce3b38:	a806      	add	r0, sp, #24
  ce3b3a:	468b      	mov	fp, r1
  ce3b3c:	f561 e746 	blx	6459cc <Vec3 ReadOnlyBinaryStream::getType<Vec3>()@plt>
  ce3b40:	eddf 0b1f 	vldr	d16, [pc, #124]	; ce3bc0 <ExplodePacket::read(BinaryStream&)+0x90>
  ce3b44:	462e      	mov	r6, r5
  ce3b46:	9806      	ldr	r0, [sp, #24]
  ce3b48:	ec53 2b30 	vmov	r2, r3, d16
  ce3b4c:	f846 0f10 	str.w	r0, [r6, #16]!
  ce3b50:	9807      	ldr	r0, [sp, #28]
  ce3b52:	6070      	str	r0, [r6, #4]
  ce3b54:	9808      	ldr	r0, [sp, #32]
  ce3b56:	60b0      	str	r0, [r6, #8]
  ce3b58:	4658      	mov	r0, fp
  ce3b5a:	f56c e5ea 	blx	650730 <ReadOnlyBinaryStream::getFixedFloat(double)@plt>
  ce3b5e:	60f0      	str	r0, [r6, #12]
  ce3b60:	a806      	add	r0, sp, #24
  ce3b62:	4631      	mov	r1, r6
  ce3b64:	f548 e146 	blx	62bdf4 <BlockPos::BlockPos(Vec3 const&)@plt>
  ce3b68:	4658      	mov	r0, fp
  ce3b6a:	f557 e294 	blx	63b094 <ReadOnlyBinaryStream::getUnsignedVarInt()@plt>
  ce3b6e:	4606      	mov	r6, r0
  ce3b70:	b31e      	cbz	r6, ce3bba <ExplodePacket::read(BinaryStream&)+0x8a>
  ce3b72:	f105 0820 	add.w	r8, r5, #32
  ce3b76:	f10d 090c 	add.w	r9, sp, #12
  ce3b7a:	46ea      	mov	sl, sp
  ce3b7c:	4650      	mov	r0, sl
  ce3b7e:	4659      	mov	r1, fp
  ce3b80:	f56c e5dc 	blx	65073c <BlockPos ReadOnlyBinaryStream::getType<BlockPos>()@plt>
  ce3b84:	e89d 0007 	ldmia.w	sp, {r0, r1, r2}
  ce3b88:	e9dd 3706 	ldrd	r3, r7, [sp, #24]
  ce3b8c:	4439      	add	r1, r7
  ce3b8e:	9c08      	ldr	r4, [sp, #32]
  ce3b90:	4418      	add	r0, r3
  ce3b92:	9003      	str	r0, [sp, #12]
  ce3b94:	9104      	str	r1, [sp, #16]
  ce3b96:	4422      	add	r2, r4
  ce3b98:	9205      	str	r2, [sp, #20]
  ce3b9a:	e9d5 3709 	ldrd	r3, r7, [r5, #36]	; 0x24
  ce3b9e:	42bb      	cmp	r3, r7
  ce3ba0:	d005      	beq.n	ce3bae <ExplodePacket::read(BinaryStream&)+0x7e>
  ce3ba2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
  ce3ba6:	f103 000c 	add.w	r0, r3, #12
  ce3baa:	6268      	str	r0, [r5, #36]	; 0x24
  ce3bac:	e003      	b.n	ce3bb6 <ExplodePacket::read(BinaryStream&)+0x86>
  ce3bae:	4640      	mov	r0, r8
  ce3bb0:	4649      	mov	r1, r9
  ce3bb2:	f56c e5ca 	blx	650748 <void std::vector<BlockPos, std::allocator<BlockPos> >::_M_emplace_back_aux<BlockPos>(BlockPos&&)@plt>
  ce3bb6:	3e01      	subs	r6, #1
  ce3bb8:	d1e0      	bne.n	ce3b7c <ExplodePacket::read(BinaryStream&)+0x4c>
  ce3bba:	b009      	add	sp, #36	; 0x24
  ce3bbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  ce3bc0:	0000      	movs	r0, r0
  ce3bc2:	0000      	movs	r0, r0
  ce3bc4:	0000      	movs	r0, r0
  ce3bc6:	4040      	eors	r0, r0
