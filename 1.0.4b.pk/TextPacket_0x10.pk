  99424c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  994250:	b087      	sub	sp, #28
  994252:	460d      	mov	r5, r1
  994254:	4604      	mov	r4, r0
  994256:	4628      	mov	r0, r5
  994258:	f508 ec46 	blx	69cae8 <ReadOnlyBinaryStream::getByte()@plt>
  99425c:	7320      	strb	r0, [r4, #12]
  99425e:	2807      	cmp	r0, #7
  994260:	d855      	bhi.n	99430e <TextPacket::read(BinaryStream&)+0xc2>
  994262:	2101      	movs	r1, #1
  994264:	4081      	lsls	r1, r0
  994266:	f011 0fca 	tst.w	r1, #202	; 0xca
  99426a:	d03a      	beq.n	9942e2 <TextPacket::read(BinaryStream&)+0x96>
  99426c:	ae04      	add	r6, sp, #16
  99426e:	4629      	mov	r1, r5
  994270:	4630      	mov	r0, r6
  994272:	f507 efc0 	blx	69c1f4 <ReadOnlyBinaryStream::getString()@plt>
  994276:	f104 0010 	add.w	r0, r4, #16
  99427a:	4631      	mov	r1, r6
  99427c:	f16e ec4c 	blx	b02b18 <std::_Hashtable<int, std::pair<int const, GameType>, std::allocator<std::pair<int const, GameType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>)+0x251a>
  994280:	f8df 0368 	ldr.w	r0, [pc, #872]	; 9945ec <TextPacket::read(BinaryStream&)+0x3a0>
  994284:	4fcf      	ldr	r7, [pc, #828]	; (9945c4 <TextPacket::read(BinaryStream&)+0x378>)
  994286:	4478      	add	r0, pc
  994288:	9904      	ldr	r1, [sp, #16]
  99428a:	583a      	ldr	r2, [r7, r0]
  99428c:	f1a1 000c 	sub.w	r0, r1, #12
  994290:	4290      	cmp	r0, r2
  994292:	f040 80a1 	bne.w	9943d8 <TextPacket::read(BinaryStream&)+0x18c>
  994296:	ae03      	add	r6, sp, #12
  994298:	4629      	mov	r1, r5
  99429a:	4630      	mov	r0, r6
  99429c:	f507 efaa 	blx	69c1f4 <ReadOnlyBinaryStream::getString()@plt>
  9942a0:	f104 0014 	add.w	r0, r4, #20
  9942a4:	4631      	mov	r1, r6
  9942a6:	f16e ec38 	blx	b02b18 <std::_Hashtable<int, std::pair<int const, GameType>, std::allocator<std::pair<int const, GameType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>)+0x251a>
  9942aa:	48d4      	ldr	r0, [pc, #848]	; (9945fc <TextPacket::read(BinaryStream&)+0x3b0>)
  9942ac:	9903      	ldr	r1, [sp, #12]
  9942ae:	4478      	add	r0, pc
  9942b0:	583a      	ldr	r2, [r7, r0]
  9942b2:	f1a1 000c 	sub.w	r0, r1, #12
  9942b6:	4290      	cmp	r0, r2
  9942b8:	d029      	beq.n	99430e <TextPacket::read(BinaryStream&)+0xc2>
  9942ba:	4ad1      	ldr	r2, [pc, #836]	; (994600 <TextPacket::read(BinaryStream&)+0x3b4>)
  9942bc:	4bc3      	ldr	r3, [pc, #780]	; (9945cc <TextPacket::read(BinaryStream&)+0x380>)
  9942be:	447a      	add	r2, pc
  9942c0:	589b      	ldr	r3, [r3, r2]
  9942c2:	1f0a      	subs	r2, r1, #4
  9942c4:	2b00      	cmp	r3, #0
  9942c6:	f000 80ab 	beq.w	994420 <TextPacket::read(BinaryStream&)+0x1d4>
  9942ca:	f3bf 8f5b 	dmb	ish
  9942ce:	e852 1f00 	ldrex	r1, [r2]
  9942d2:	1e4b      	subs	r3, r1, #1
  9942d4:	e842 3700 	strex	r7, r3, [r2]
  9942d8:	2f00      	cmp	r7, #0
  9942da:	d1f8      	bne.n	9942ce <TextPacket::read(BinaryStream&)+0x82>
  9942dc:	f3bf 8f5b 	dmb	ish
  9942e0:	e0a1      	b.n	994426 <TextPacket::read(BinaryStream&)+0x1da>
  9942e2:	f011 0f31 	tst.w	r1, #49	; 0x31
  9942e6:	d015      	beq.n	994314 <TextPacket::read(BinaryStream&)+0xc8>
  9942e8:	ae05      	add	r6, sp, #20
  9942ea:	4629      	mov	r1, r5
  9942ec:	4630      	mov	r0, r6
  9942ee:	f507 ef82 	blx	69c1f4 <ReadOnlyBinaryStream::getString()@plt>
  9942f2:	f104 0014 	add.w	r0, r4, #20
  9942f6:	4631      	mov	r1, r6
  9942f8:	f16e ec0e 	blx	b02b18 <std::_Hashtable<int, std::pair<int const, GameType>, std::allocator<std::pair<int const, GameType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>)+0x251a>
  9942fc:	48c3      	ldr	r0, [pc, #780]	; (99460c <TextPacket::read(BinaryStream&)+0x3c0>)
  9942fe:	4ab1      	ldr	r2, [pc, #708]	; (9945c4 <TextPacket::read(BinaryStream&)+0x378>)
  994300:	4478      	add	r0, pc
  994302:	9905      	ldr	r1, [sp, #20]
  994304:	5812      	ldr	r2, [r2, r0]
  994306:	f1a1 000c 	sub.w	r0, r1, #12
  99430a:	4290      	cmp	r0, r2
  99430c:	d176      	bne.n	9943fc <TextPacket::read(BinaryStream&)+0x1b0>
  99430e:	b007      	add	sp, #28
  994310:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  994314:	2802      	cmp	r0, #2
  994316:	d1fa      	bne.n	99430e <TextPacket::read(BinaryStream&)+0xc2>
  994318:	ae02      	add	r6, sp, #8
  99431a:	4629      	mov	r1, r5
  99431c:	4630      	mov	r0, r6
  99431e:	f507 ef6a 	blx	69c1f4 <ReadOnlyBinaryStream::getString()@plt>
  994322:	f104 0014 	add.w	r0, r4, #20
  994326:	4631      	mov	r1, r6
  994328:	f16e ebf6 	blx	b02b18 <std::_Hashtable<int, std::pair<int const, GameType>, std::allocator<std::pair<int const, GameType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>)+0x251a>
  99432c:	48a8      	ldr	r0, [pc, #672]	; (9945d0 <TextPacket::read(BinaryStream&)+0x384>)
  99432e:	4fa5      	ldr	r7, [pc, #660]	; (9945c4 <TextPacket::read(BinaryStream&)+0x378>)
  994330:	4478      	add	r0, pc
  994332:	9902      	ldr	r1, [sp, #8]
  994334:	583a      	ldr	r2, [r7, r0]
  994336:	f1a1 000c 	sub.w	r0, r1, #12
  99433a:	4290      	cmp	r0, r2
  99433c:	f040 80ab 	bne.w	994496 <TextPacket::read(BinaryStream&)+0x24a>
  994340:	4628      	mov	r0, r5
  994342:	f508 ea88 	blx	69c854 <ReadOnlyBinaryStream::getUnsignedVarInt()@plt>
  994346:	4606      	mov	r6, r0
  994348:	2e00      	cmp	r6, #0
  99434a:	d0e0      	beq.n	99430e <TextPacket::read(BinaryStream&)+0xc2>
  99434c:	48a4      	ldr	r0, [pc, #656]	; (9945e0 <TextPacket::read(BinaryStream&)+0x394>)
  99434e:	f104 0818 	add.w	r8, r4, #24
  994352:	499e      	ldr	r1, [pc, #632]	; (9945cc <TextPacket::read(BinaryStream&)+0x380>)
  994354:	f10d 0a04 	add.w	sl, sp, #4
  994358:	4478      	add	r0, pc
  99435a:	f04f 0900 	mov.w	r9, #0
  99435e:	f857 b000 	ldr.w	fp, [r7, r0]
  994362:	5808      	ldr	r0, [r1, r0]
  994364:	9000      	str	r0, [sp, #0]
  994366:	e019      	b.n	99439c <TextPacket::read(BinaryStream&)+0x150>
  994368:	1f0a      	subs	r2, r1, #4
  99436a:	9900      	ldr	r1, [sp, #0]
  99436c:	b169      	cbz	r1, 99438a <TextPacket::read(BinaryStream&)+0x13e>
  99436e:	46bc      	mov	ip, r7
  994370:	f3bf 8f5b 	dmb	ish
  994374:	e852 1f00 	ldrex	r1, [r2]
  994378:	1e4b      	subs	r3, r1, #1
  99437a:	e842 3700 	strex	r7, r3, [r2]
  99437e:	2f00      	cmp	r7, #0
  994380:	d1f8      	bne.n	994374 <TextPacket::read(BinaryStream&)+0x128>
  994382:	f3bf 8f5b 	dmb	ish
  994386:	4667      	mov	r7, ip
  994388:	e002      	b.n	994390 <TextPacket::read(BinaryStream&)+0x144>
  99438a:	6811      	ldr	r1, [r2, #0]
  99438c:	1e4b      	subs	r3, r1, #1
  99438e:	6013      	str	r3, [r2, #0]
  994390:	2900      	cmp	r1, #0
  994392:	dc1c      	bgt.n	9943ce <TextPacket::read(BinaryStream&)+0x182>
  994394:	a906      	add	r1, sp, #24
  994396:	f16e eb70 	blx	b02a78 <std::_Hashtable<int, std::pair<int const, GameType>, std::allocator<std::pair<int const, GameType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>)+0x247a>
  99439a:	e018      	b.n	9943ce <TextPacket::read(BinaryStream&)+0x182>
  99439c:	4650      	mov	r0, sl
  99439e:	4629      	mov	r1, r5
  9943a0:	f507 ef28 	blx	69c1f4 <ReadOnlyBinaryStream::getString()@plt>
  9943a4:	e9d4 0107 	ldrd	r0, r1, [r4, #28]
  9943a8:	4288      	cmp	r0, r1
  9943aa:	d007      	beq.n	9943bc <TextPacket::read(BinaryStream&)+0x170>
  9943ac:	9901      	ldr	r1, [sp, #4]
  9943ae:	f840 1b04 	str.w	r1, [r0], #4
  9943b2:	f10b 010c 	add.w	r1, fp, #12
  9943b6:	9101      	str	r1, [sp, #4]
  9943b8:	61e0      	str	r0, [r4, #28]
  9943ba:	e004      	b.n	9943c6 <TextPacket::read(BinaryStream&)+0x17a>
  9943bc:	4640      	mov	r0, r8
  9943be:	4651      	mov	r1, sl
  9943c0:	f506 e812 	blx	69a3e8 <void std::vector<std::string, std::allocator<std::string> >::_M_emplace_back_aux<std::string>(std::string&&)@plt>
  9943c4:	9901      	ldr	r1, [sp, #4]
  9943c6:	f1a1 000c 	sub.w	r0, r1, #12
  9943ca:	4558      	cmp	r0, fp
  9943cc:	d1cc      	bne.n	994368 <TextPacket::read(BinaryStream&)+0x11c>
  9943ce:	f109 0901 	add.w	r9, r9, #1
  9943d2:	45b1      	cmp	r9, r6
  9943d4:	d1e2      	bne.n	99439c <TextPacket::read(BinaryStream&)+0x150>
  9943d6:	e79a      	b.n	99430e <TextPacket::read(BinaryStream&)+0xc2>
  9943d8:	4a85      	ldr	r2, [pc, #532]	; (9945f0 <TextPacket::read(BinaryStream&)+0x3a4>)
  9943da:	4b7c      	ldr	r3, [pc, #496]	; (9945cc <TextPacket::read(BinaryStream&)+0x380>)
  9943dc:	447a      	add	r2, pc
  9943de:	589b      	ldr	r3, [r3, r2]
  9943e0:	1f0a      	subs	r2, r1, #4
  9943e2:	b34b      	cbz	r3, 994438 <TextPacket::read(BinaryStream&)+0x1ec>
  9943e4:	f3bf 8f5b 	dmb	ish
  9943e8:	e852 1f00 	ldrex	r1, [r2]
  9943ec:	1e4b      	subs	r3, r1, #1
  9943ee:	e842 3600 	strex	r6, r3, [r2]
  9943f2:	2e00      	cmp	r6, #0
  9943f4:	d1f8      	bne.n	9943e8 <TextPacket::read(BinaryStream&)+0x19c>
  9943f6:	f3bf 8f5b 	dmb	ish
  9943fa:	e020      	b.n	99443e <TextPacket::read(BinaryStream&)+0x1f2>
  9943fc:	4a84      	ldr	r2, [pc, #528]	; (994610 <TextPacket::read(BinaryStream&)+0x3c4>)
  9943fe:	4b73      	ldr	r3, [pc, #460]	; (9945cc <TextPacket::read(BinaryStream&)+0x380>)
  994400:	447a      	add	r2, pc
  994402:	589b      	ldr	r3, [r3, r2]
  994404:	1f0a      	subs	r2, r1, #4
  994406:	b15b      	cbz	r3, 994420 <TextPacket::read(BinaryStream&)+0x1d4>
  994408:	f3bf 8f5b 	dmb	ish
  99440c:	e852 1f00 	ldrex	r1, [r2]
  994410:	1e4b      	subs	r3, r1, #1
  994412:	e842 3700 	strex	r7, r3, [r2]
  994416:	2f00      	cmp	r7, #0
  994418:	d1f8      	bne.n	99440c <TextPacket::read(BinaryStream&)+0x1c0>
  99441a:	f3bf 8f5b 	dmb	ish
  99441e:	e002      	b.n	994426 <TextPacket::read(BinaryStream&)+0x1da>
  994420:	6811      	ldr	r1, [r2, #0]
  994422:	1e4b      	subs	r3, r1, #1
  994424:	6013      	str	r3, [r2, #0]
  994426:	2900      	cmp	r1, #0
  994428:	f73f af71 	bgt.w	99430e <TextPacket::read(BinaryStream&)+0xc2>
  99442c:	a906      	add	r1, sp, #24
  99442e:	f16e eb24 	blx	b02a78 <std::_Hashtable<int, std::pair<int const, GameType>, std::allocator<std::pair<int const, GameType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>)+0x247a>
  994432:	b007      	add	sp, #28
  994434:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  994438:	6811      	ldr	r1, [r2, #0]
  99443a:	1e4b      	subs	r3, r1, #1
  99443c:	6013      	str	r3, [r2, #0]
  99443e:	2900      	cmp	r1, #0
  994440:	f73f af29 	bgt.w	994296 <TextPacket::read(BinaryStream&)+0x4a>
  994444:	a906      	add	r1, sp, #24
  994446:	f16e eb18 	blx	b02a78 <std::_Hashtable<int, std::pair<int const, GameType>, std::allocator<std::pair<int const, GameType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>)+0x247a>
  99444a:	e724      	b.n	994296 <TextPacket::read(BinaryStream&)+0x4a>
  99444c:	4a62      	ldr	r2, [pc, #392]	; (9945d8 <TextPacket::read(BinaryStream&)+0x38c>)
  99444e:	4604      	mov	r4, r0
  994450:	9901      	ldr	r1, [sp, #4]
  994452:	447a      	add	r2, pc
  994454:	f1a1 000c 	sub.w	r0, r1, #12
  994458:	58ba      	ldr	r2, [r7, r2]
  99445a:	4290      	cmp	r0, r2
  99445c:	d018      	beq.n	994490 <TextPacket::read(BinaryStream&)+0x244>
  99445e:	4a5f      	ldr	r2, [pc, #380]	; (9945dc <TextPacket::read(BinaryStream&)+0x390>)
  994460:	4b5a      	ldr	r3, [pc, #360]	; (9945cc <TextPacket::read(BinaryStream&)+0x380>)
  994462:	447a      	add	r2, pc
  994464:	589b      	ldr	r3, [r3, r2]
  994466:	1f0a      	subs	r2, r1, #4
  994468:	2b00      	cmp	r3, #0
  99446a:	f000 80a4 	beq.w	9945b6 <TextPacket::read(BinaryStream&)+0x36a>
  99446e:	f3bf 8f5b 	dmb	ish
  994472:	e852 1f00 	ldrex	r1, [r2]
  994476:	1e4b      	subs	r3, r1, #1
  994478:	e842 3700 	strex	r7, r3, [r2]
  99447c:	2f00      	cmp	r7, #0
  99447e:	d1f8      	bne.n	994472 <TextPacket::read(BinaryStream&)+0x226>
  994480:	f3bf 8f5b 	dmb	ish
  994484:	2900      	cmp	r1, #0
  994486:	bfdc      	itt	le
  994488:	f10d 0118 	addle.w	r1, sp, #24
  99448c:	f16e eaf4 	blxle	b02a78 <std::_Hashtable<int, std::pair<int const, GameType>, std::allocator<std::pair<int const, GameType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>)+0x247a>
  994490:	4620      	mov	r0, r4
  994492:	f505 eee4 	blx	69a25c <_Unwind_Resume@plt>
  994496:	4a4f      	ldr	r2, [pc, #316]	; (9945d4 <TextPacket::read(BinaryStream&)+0x388>)
  994498:	4b4c      	ldr	r3, [pc, #304]	; (9945cc <TextPacket::read(BinaryStream&)+0x380>)
  99449a:	447a      	add	r2, pc
  99449c:	589b      	ldr	r3, [r3, r2]
  99449e:	1f0a      	subs	r2, r1, #4
  9944a0:	b16b      	cbz	r3, 9944be <TextPacket::read(BinaryStream&)+0x272>
  9944a2:	463e      	mov	r6, r7
  9944a4:	f3bf 8f5b 	dmb	ish
  9944a8:	e852 1f00 	ldrex	r1, [r2]
  9944ac:	1e4b      	subs	r3, r1, #1
  9944ae:	e842 3700 	strex	r7, r3, [r2]
  9944b2:	2f00      	cmp	r7, #0
  9944b4:	d1f8      	bne.n	9944a8 <TextPacket::read(BinaryStream&)+0x25c>
  9944b6:	f3bf 8f5b 	dmb	ish
  9944ba:	4637      	mov	r7, r6
  9944bc:	e002      	b.n	9944c4 <TextPacket::read(BinaryStream&)+0x278>
  9944be:	6811      	ldr	r1, [r2, #0]
  9944c0:	1e4b      	subs	r3, r1, #1
  9944c2:	6013      	str	r3, [r2, #0]
  9944c4:	2900      	cmp	r1, #0
  9944c6:	f73f af3b 	bgt.w	994340 <TextPacket::read(BinaryStream&)+0xf4>
  9944ca:	a906      	add	r1, sp, #24
  9944cc:	f16e ead4 	blx	b02a78 <std::_Hashtable<int, std::pair<int const, GameType>, std::allocator<std::pair<int const, GameType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>)+0x247a>
  9944d0:	e736      	b.n	994340 <TextPacket::read(BinaryStream&)+0xf4>
  9944d2:	4a44      	ldr	r2, [pc, #272]	; (9945e4 <TextPacket::read(BinaryStream&)+0x398>)
  9944d4:	4604      	mov	r4, r0
  9944d6:	4b3b      	ldr	r3, [pc, #236]	; (9945c4 <TextPacket::read(BinaryStream&)+0x378>)
  9944d8:	447a      	add	r2, pc
  9944da:	9904      	ldr	r1, [sp, #16]
  9944dc:	f1a1 000c 	sub.w	r0, r1, #12
  9944e0:	589a      	ldr	r2, [r3, r2]
  9944e2:	4290      	cmp	r0, r2
  9944e4:	d0d4      	beq.n	994490 <TextPacket::read(BinaryStream&)+0x244>
  9944e6:	4a40      	ldr	r2, [pc, #256]	; (9945e8 <TextPacket::read(BinaryStream&)+0x39c>)
  9944e8:	4b38      	ldr	r3, [pc, #224]	; (9945cc <TextPacket::read(BinaryStream&)+0x380>)
  9944ea:	447a      	add	r2, pc
  9944ec:	589b      	ldr	r3, [r3, r2]
  9944ee:	1f0a      	subs	r2, r1, #4
  9944f0:	2b00      	cmp	r3, #0
  9944f2:	d060      	beq.n	9945b6 <TextPacket::read(BinaryStream&)+0x36a>
  9944f4:	f3bf 8f5b 	dmb	ish
  9944f8:	e852 1f00 	ldrex	r1, [r2]
  9944fc:	1e4b      	subs	r3, r1, #1
  9944fe:	e842 3700 	strex	r7, r3, [r2]
  994502:	2f00      	cmp	r7, #0
  994504:	d1f8      	bne.n	9944f8 <TextPacket::read(BinaryStream&)+0x2ac>
  994506:	f3bf 8f5b 	dmb	ish
  99450a:	e7bb      	b.n	994484 <TextPacket::read(BinaryStream&)+0x238>
  99450c:	4a39      	ldr	r2, [pc, #228]	; (9945f4 <TextPacket::read(BinaryStream&)+0x3a8>)
  99450e:	4604      	mov	r4, r0
  994510:	9903      	ldr	r1, [sp, #12]
  994512:	447a      	add	r2, pc
  994514:	f1a1 000c 	sub.w	r0, r1, #12
  994518:	58ba      	ldr	r2, [r7, r2]
  99451a:	4290      	cmp	r0, r2
  99451c:	d0b8      	beq.n	994490 <TextPacket::read(BinaryStream&)+0x244>
  99451e:	4a36      	ldr	r2, [pc, #216]	; (9945f8 <TextPacket::read(BinaryStream&)+0x3ac>)
  994520:	4b2a      	ldr	r3, [pc, #168]	; (9945cc <TextPacket::read(BinaryStream&)+0x380>)
  994522:	447a      	add	r2, pc
  994524:	589b      	ldr	r3, [r3, r2]
  994526:	1f0a      	subs	r2, r1, #4
  994528:	2b00      	cmp	r3, #0
  99452a:	d044      	beq.n	9945b6 <TextPacket::read(BinaryStream&)+0x36a>
  99452c:	f3bf 8f5b 	dmb	ish
  994530:	e852 1f00 	ldrex	r1, [r2]
  994534:	1e4b      	subs	r3, r1, #1
  994536:	e842 3700 	strex	r7, r3, [r2]
  99453a:	2f00      	cmp	r7, #0
  99453c:	d1f8      	bne.n	994530 <TextPacket::read(BinaryStream&)+0x2e4>
  99453e:	f3bf 8f5b 	dmb	ish
  994542:	e79f      	b.n	994484 <TextPacket::read(BinaryStream&)+0x238>
  994544:	4a2f      	ldr	r2, [pc, #188]	; (994604 <TextPacket::read(BinaryStream&)+0x3b8>)
  994546:	4604      	mov	r4, r0
  994548:	4b1e      	ldr	r3, [pc, #120]	; (9945c4 <TextPacket::read(BinaryStream&)+0x378>)
  99454a:	447a      	add	r2, pc
  99454c:	9905      	ldr	r1, [sp, #20]
  99454e:	f1a1 000c 	sub.w	r0, r1, #12
  994552:	589a      	ldr	r2, [r3, r2]
  994554:	4290      	cmp	r0, r2
  994556:	d09b      	beq.n	994490 <TextPacket::read(BinaryStream&)+0x244>
  994558:	4a2b      	ldr	r2, [pc, #172]	; (994608 <TextPacket::read(BinaryStream&)+0x3bc>)
  99455a:	4b1c      	ldr	r3, [pc, #112]	; (9945cc <TextPacket::read(BinaryStream&)+0x380>)
  99455c:	447a      	add	r2, pc
  99455e:	589b      	ldr	r3, [r3, r2]
  994560:	1f0a      	subs	r2, r1, #4
  994562:	b343      	cbz	r3, 9945b6 <TextPacket::read(BinaryStream&)+0x36a>
  994564:	f3bf 8f5b 	dmb	ish
  994568:	e852 1f00 	ldrex	r1, [r2]
  99456c:	1e4b      	subs	r3, r1, #1
  99456e:	e842 3700 	strex	r7, r3, [r2]
  994572:	2f00      	cmp	r7, #0
  994574:	d1f8      	bne.n	994568 <TextPacket::read(BinaryStream&)+0x31c>
  994576:	f3bf 8f5b 	dmb	ish
  99457a:	e783      	b.n	994484 <TextPacket::read(BinaryStream&)+0x238>
  99457c:	4a10      	ldr	r2, [pc, #64]	; (9945c0 <TextPacket::read(BinaryStream&)+0x374>)
  99457e:	4604      	mov	r4, r0
  994580:	4b10      	ldr	r3, [pc, #64]	; (9945c4 <TextPacket::read(BinaryStream&)+0x378>)
  994582:	447a      	add	r2, pc
  994584:	9902      	ldr	r1, [sp, #8]
  994586:	f1a1 000c 	sub.w	r0, r1, #12
  99458a:	589a      	ldr	r2, [r3, r2]
  99458c:	4290      	cmp	r0, r2
  99458e:	f43f af7f 	beq.w	994490 <TextPacket::read(BinaryStream&)+0x244>
  994592:	4a0d      	ldr	r2, [pc, #52]	; (9945c8 <TextPacket::read(BinaryStream&)+0x37c>)
  994594:	4b0d      	ldr	r3, [pc, #52]	; (9945cc <TextPacket::read(BinaryStream&)+0x380>)
  994596:	447a      	add	r2, pc
  994598:	589b      	ldr	r3, [r3, r2]
  99459a:	1f0a      	subs	r2, r1, #4
  99459c:	b15b      	cbz	r3, 9945b6 <TextPacket::read(BinaryStream&)+0x36a>
  99459e:	f3bf 8f5b 	dmb	ish
  9945a2:	e852 1f00 	ldrex	r1, [r2]
  9945a6:	1e4b      	subs	r3, r1, #1
  9945a8:	e842 3700 	strex	r7, r3, [r2]
  9945ac:	2f00      	cmp	r7, #0
  9945ae:	d1f8      	bne.n	9945a2 <TextPacket::read(BinaryStream&)+0x356>
  9945b0:	f3bf 8f5b 	dmb	ish
  9945b4:	e766      	b.n	994484 <TextPacket::read(BinaryStream&)+0x238>
  9945b6:	6811      	ldr	r1, [r2, #0]
  9945b8:	1e4b      	subs	r3, r1, #1
  9945ba:	6013      	str	r3, [r2, #0]
  9945bc:	e762      	b.n	994484 <TextPacket::read(BinaryStream&)+0x238>
  9945be:	bf00      	nop
  9945c0:	6a52      	ldr	r2, [r2, #36]	; 0x24
  9945c2:	015f      	lsls	r7, r3, #5
  9945c4:	8a98      	ldrh	r0, [r3, #20]
  9945c6:	ffff 6a3e 	vshll.u32	q11, d30, #31
  9945ca:	015f      	lsls	r7, r3, #5
  9945cc:	8a9c      	ldrh	r4, [r3, #20]
  9945ce:	ffff 6ca4 	vmull.u<illegal width 64>	q11, d31, d20
  9945d2:	015f      	lsls	r7, r3, #5
  9945d4:	6b3a      	ldr	r2, [r7, #48]	; 0x30
  9945d6:	015f      	lsls	r7, r3, #5
  9945d8:	6b82      	ldr	r2, [r0, #56]	; 0x38
  9945da:	015f      	lsls	r7, r3, #5
  9945dc:	6b72      	ldr	r2, [r6, #52]	; 0x34
  9945de:	015f      	lsls	r7, r3, #5
  9945e0:	6c7c      	ldr	r4, [r7, #68]	; 0x44
  9945e2:	015f      	lsls	r7, r3, #5
  9945e4:	6afc      	ldr	r4, [r7, #44]	; 0x2c
  9945e6:	015f      	lsls	r7, r3, #5
  9945e8:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  9945ea:	015f      	lsls	r7, r3, #5
  9945ec:	6d4e      	ldr	r6, [r1, #84]	; 0x54
  9945ee:	015f      	lsls	r7, r3, #5
  9945f0:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
  9945f2:	015f      	lsls	r7, r3, #5
  9945f4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
  9945f6:	015f      	lsls	r7, r3, #5
  9945f8:	6ab2      	ldr	r2, [r6, #40]	; 0x28
  9945fa:	015f      	lsls	r7, r3, #5
  9945fc:	6d26      	ldr	r6, [r4, #80]	; 0x50
  9945fe:	015f      	lsls	r7, r3, #5
  994600:	6d16      	ldr	r6, [r2, #80]	; 0x50
  994602:	015f      	lsls	r7, r3, #5
  994604:	6a8a      	ldr	r2, [r1, #40]	; 0x28
  994606:	015f      	lsls	r7, r3, #5
  994608:	6a78      	ldr	r0, [r7, #36]	; 0x24
  99460a:	015f      	lsls	r7, r3, #5
  99460c:	6cd4      	ldr	r4, [r2, #76]	; 0x4c
  99460e:	015f      	lsls	r7, r3, #5
  994610:	6bd4      	ldr	r4, [r2, #60]	; 0x3c
  994612:	015f      	lsls	r7, r3, #5
