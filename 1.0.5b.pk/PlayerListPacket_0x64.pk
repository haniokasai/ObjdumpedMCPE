  9ece68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  9ece6c:	b081      	sub	sp, #4
  9ece6e:	ed2d 8b06 	vpush	{d8-d10}
  9ece72:	b0a2      	sub	sp, #136	; 0x88
  9ece74:	460c      	mov	r4, r1
  9ece76:	4605      	mov	r5, r0
  9ece78:	4620      	mov	r0, r4
  9ece7a:	9403      	str	r4, [sp, #12]
  9ece7c:	f4de e904 	blx	6cb088 <ReadOnlyBinaryStream::getByte()@plt>
  9ece80:	7628      	strb	r0, [r5, #24]
  9ece82:	4620      	mov	r0, r4
  9ece84:	f4dd efb6 	blx	6cadf4 <ReadOnlyBinaryStream::getUnsignedVarInt()@plt>
  9ece88:	4606      	mov	r6, r0
  9ece8a:	7e28      	ldrb	r0, [r5, #24]
  9ece8c:	2800      	cmp	r0, #0
  9ece8e:	d14c      	bne.n	9ecf2a <PlayerListPacket::read(BinaryStream&)+0xc2>
  9ece90:	2e00      	cmp	r6, #0
  9ece92:	f000 809b 	beq.w	9ecfcc <PlayerListPacket::read(BinaryStream&)+0x164>
  9ece96:	af12      	add	r7, sp, #72	; 0x48
  9ece98:	f105 000c 	add.w	r0, r5, #12
  9ece9c:	9001      	str	r0, [sp, #4]
  9ece9e:	f107 0020 	add.w	r0, r7, #32
  9ecea2:	9002      	str	r0, [sp, #8]
  9ecea4:	ef80 8050 	vmov.i32	q4, #0	; 0x00000000
  9ecea8:	4878      	ldr	r0, [pc, #480]	; (9ed08c <PlayerListPacket::read(BinaryStream&)+0x224>)
  9eceaa:	ef80 a010 	vmov.i32	d10, #0	; 0x00000000
  9eceae:	4a72      	ldr	r2, [pc, #456]	; (9ed078 <PlayerListPacket::read(BinaryStream&)+0x210>)
  9eceb0:	f107 0918 	add.w	r9, r7, #24
  9eceb4:	4478      	add	r0, pc
  9eceb6:	4971      	ldr	r1, [pc, #452]	; (9ed07c <PlayerListPacket::read(BinaryStream&)+0x214>)
  9eceb8:	f107 0808 	add.w	r8, r7, #8
  9ecebc:	f04f 3bff 	mov.w	fp, #4294967295
  9ecec0:	5812      	ldr	r2, [r2, r0]
  9ecec2:	180c      	adds	r4, r1, r0
  9ecec4:	f102 0a0c 	add.w	sl, r2, #12
  9ecec8:	e9cd bb12 	strd	fp, fp, [sp, #72]	; 0x48
  9ececc:	f8cd a060 	str.w	sl, [sp, #96]	; 0x60
  9eced0:	f908 8acf 	vst1.64	{d8-d9}, [r8]
  9eced4:	4648      	mov	r0, r9
  9eced6:	4621      	mov	r1, r4
  9eced8:	2200      	movs	r2, #0
  9eceda:	f147 eb6e 	blx	b345b8 <CommandTarget::getCommandTarget(CommandOrigin const&, Entity const*)+0x23c>
  9ecede:	ec4a ab10 	vmov	d0, sl, sl
  9ecee2:	9802      	ldr	r0, [sp, #8]
  9ecee4:	eef0 0a40 	vmov.f32	s1, s0
  9ecee8:	eeb0 1a4a 	vmov.f32	s2, s20
  9eceec:	eef0 1a4a 	vmov.f32	s3, s20
  9ecef0:	f900 0acf 	vst1.64	{d0-d1}, [r0]
  9ecef4:	2000      	movs	r0, #0
  9ecef6:	901e      	str	r0, [sp, #120]	; 0x78
  9ecef8:	9903      	ldr	r1, [sp, #12]
  9ecefa:	4638      	mov	r0, r7
  9ecefc:	f4de ea9e 	blx	6cb43c <PlayerListEntry::read(BinaryStream&)@plt>
  9ecf00:	e9d5 0104 	ldrd	r0, r1, [r5, #16]
  9ecf04:	4288      	cmp	r0, r1
  9ecf06:	d006      	beq.n	9ecf16 <PlayerListPacket::read(BinaryStream&)+0xae>
  9ecf08:	4639      	mov	r1, r7
  9ecf0a:	f4de ea9e 	blx	6cb448 <PlayerListEntry::PlayerListEntry(PlayerListEntry const&)@plt>
  9ecf0e:	6928      	ldr	r0, [r5, #16]
  9ecf10:	3038      	adds	r0, #56	; 0x38
  9ecf12:	6128      	str	r0, [r5, #16]
  9ecf14:	e003      	b.n	9ecf1e <PlayerListPacket::read(BinaryStream&)+0xb6>
  9ecf16:	9801      	ldr	r0, [sp, #4]
  9ecf18:	4639      	mov	r1, r7
  9ecf1a:	f4de ea9c 	blx	6cb454 <void std::vector<PlayerListEntry, std::allocator<PlayerListEntry> >::_M_emplace_back_aux<PlayerListEntry&>(PlayerListEntry&)@plt>
  9ecf1e:	4638      	mov	r0, r7
  9ecf20:	f4de ea80 	blx	6cb424 <PlayerListEntry::~PlayerListEntry()@plt>
  9ecf24:	3e01      	subs	r6, #1
  9ecf26:	d1cf      	bne.n	9ecec8 <PlayerListPacket::read(BinaryStream&)+0x60>
  9ecf28:	e050      	b.n	9ecfcc <PlayerListPacket::read(BinaryStream&)+0x164>
  9ecf2a:	2801      	cmp	r0, #1
  9ecf2c:	d14e      	bne.n	9ecfcc <PlayerListPacket::read(BinaryStream&)+0x164>
  9ecf2e:	2e00      	cmp	r6, #0
  9ecf30:	d04c      	beq.n	9ecfcc <PlayerListPacket::read(BinaryStream&)+0x164>
  9ecf32:	f105 000c 	add.w	r0, r5, #12
  9ecf36:	f10d 0a10 	add.w	sl, sp, #16
  9ecf3a:	9000      	str	r0, [sp, #0]
  9ecf3c:	f10a 0020 	add.w	r0, sl, #32
  9ecf40:	9001      	str	r0, [sp, #4]
  9ecf42:	f10a 0018 	add.w	r0, sl, #24
  9ecf46:	9002      	str	r0, [sp, #8]
  9ecf48:	ef80 8050 	vmov.i32	q4, #0	; 0x00000000
  9ecf4c:	4849      	ldr	r0, [pc, #292]	; (9ed074 <PlayerListPacket::read(BinaryStream&)+0x20c>)
  9ecf4e:	ef80 a010 	vmov.i32	d10, #0	; 0x00000000
  9ecf52:	4a49      	ldr	r2, [pc, #292]	; (9ed078 <PlayerListPacket::read(BinaryStream&)+0x210>)
  9ecf54:	f10a 0708 	add.w	r7, sl, #8
  9ecf58:	4478      	add	r0, pc
  9ecf5a:	4948      	ldr	r1, [pc, #288]	; (9ed07c <PlayerListPacket::read(BinaryStream&)+0x214>)
  9ecf5c:	f04f 38ff 	mov.w	r8, #4294967295
  9ecf60:	f04f 0b00 	mov.w	fp, #0
  9ecf64:	5812      	ldr	r2, [r2, r0]
  9ecf66:	180c      	adds	r4, r1, r0
  9ecf68:	f102 090c 	add.w	r9, r2, #12
  9ecf6c:	e9cd 8804 	strd	r8, r8, [sp, #16]
  9ecf70:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
  9ecf74:	f907 8acf 	vst1.64	{d8-d9}, [r7]
  9ecf78:	9802      	ldr	r0, [sp, #8]
  9ecf7a:	4621      	mov	r1, r4
  9ecf7c:	2200      	movs	r2, #0
  9ecf7e:	f147 eb1c 	blx	b345b8 <CommandTarget::getCommandTarget(CommandOrigin const&, Entity const*)+0x23c>
  9ecf82:	ec49 9b10 	vmov	d0, r9, r9
  9ecf86:	9801      	ldr	r0, [sp, #4]
  9ecf88:	eef0 0a40 	vmov.f32	s1, s0
  9ecf8c:	eeb0 1a4a 	vmov.f32	s2, s20
  9ecf90:	eef0 1a4a 	vmov.f32	s3, s20
  9ecf94:	f900 0acf 	vst1.64	{d0-d1}, [r0]
  9ecf98:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
  9ecf9c:	9803      	ldr	r0, [sp, #12]
  9ecf9e:	4639      	mov	r1, r7
  9ecfa0:	f4de e9d4 	blx	6cb34c <void ReadOnlyBinaryStream::readType<mce::UUID>(mce::UUID&)@plt>
  9ecfa4:	e9d5 0104 	ldrd	r0, r1, [r5, #16]
  9ecfa8:	4288      	cmp	r0, r1
  9ecfaa:	d006      	beq.n	9ecfba <PlayerListPacket::read(BinaryStream&)+0x152>
  9ecfac:	4651      	mov	r1, sl
  9ecfae:	f4de ea4c 	blx	6cb448 <PlayerListEntry::PlayerListEntry(PlayerListEntry const&)@plt>
  9ecfb2:	6928      	ldr	r0, [r5, #16]
  9ecfb4:	3038      	adds	r0, #56	; 0x38
  9ecfb6:	6128      	str	r0, [r5, #16]
  9ecfb8:	e003      	b.n	9ecfc2 <PlayerListPacket::read(BinaryStream&)+0x15a>
  9ecfba:	9800      	ldr	r0, [sp, #0]
  9ecfbc:	4651      	mov	r1, sl
  9ecfbe:	f4de ea4a 	blx	6cb454 <void std::vector<PlayerListEntry, std::allocator<PlayerListEntry> >::_M_emplace_back_aux<PlayerListEntry&>(PlayerListEntry&)@plt>
  9ecfc2:	4650      	mov	r0, sl
  9ecfc4:	f4de ea2e 	blx	6cb424 <PlayerListEntry::~PlayerListEntry()@plt>
  9ecfc8:	3e01      	subs	r6, #1
  9ecfca:	d1cf      	bne.n	9ecf6c <PlayerListPacket::read(BinaryStream&)+0x104>
  9ecfcc:	b022      	add	sp, #136	; 0x88
  9ecfce:	ecbd 8b06 	vpop	{d8-d10}
  9ecfd2:	b001      	add	sp, #4
  9ecfd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  9ecfd8:	4a2d      	ldr	r2, [pc, #180]	; (9ed090 <PlayerListPacket::read(BinaryStream&)+0x228>)
  9ecfda:	4604      	mov	r4, r0
  9ecfdc:	4b26      	ldr	r3, [pc, #152]	; (9ed078 <PlayerListPacket::read(BinaryStream&)+0x210>)
  9ecfde:	447a      	add	r2, pc
  9ecfe0:	9918      	ldr	r1, [sp, #96]	; 0x60
  9ecfe2:	f1a1 000c 	sub.w	r0, r1, #12
  9ecfe6:	589a      	ldr	r2, [r3, r2]
  9ecfe8:	4290      	cmp	r0, r2
  9ecfea:	d03b      	beq.n	9ed064 <PlayerListPacket::read(BinaryStream&)+0x1fc>
  9ecfec:	4a29      	ldr	r2, [pc, #164]	; (9ed094 <PlayerListPacket::read(BinaryStream&)+0x22c>)
  9ecfee:	4b26      	ldr	r3, [pc, #152]	; (9ed088 <PlayerListPacket::read(BinaryStream&)+0x220>)
  9ecff0:	447a      	add	r2, pc
  9ecff2:	589b      	ldr	r3, [r3, r2]
  9ecff4:	1f0a      	subs	r2, r1, #4
  9ecff6:	b3c3      	cbz	r3, 9ed06a <PlayerListPacket::read(BinaryStream&)+0x202>
  9ecff8:	f3bf 8f5b 	dmb	ish
  9ecffc:	e852 1f00 	ldrex	r1, [r2]
  9ed000:	1e4b      	subs	r3, r1, #1
  9ed002:	e842 3700 	strex	r7, r3, [r2]
  9ed006:	2f00      	cmp	r7, #0
  9ed008:	d1f8      	bne.n	9ecffc <PlayerListPacket::read(BinaryStream&)+0x194>
  9ed00a:	f3bf 8f5b 	dmb	ish
  9ed00e:	e01a      	b.n	9ed046 <PlayerListPacket::read(BinaryStream&)+0x1de>
  9ed010:	4a1b      	ldr	r2, [pc, #108]	; (9ed080 <PlayerListPacket::read(BinaryStream&)+0x218>)
  9ed012:	4604      	mov	r4, r0
  9ed014:	4b18      	ldr	r3, [pc, #96]	; (9ed078 <PlayerListPacket::read(BinaryStream&)+0x210>)
  9ed016:	447a      	add	r2, pc
  9ed018:	990a      	ldr	r1, [sp, #40]	; 0x28
  9ed01a:	f1a1 000c 	sub.w	r0, r1, #12
  9ed01e:	589a      	ldr	r2, [r3, r2]
  9ed020:	4290      	cmp	r0, r2
  9ed022:	d01f      	beq.n	9ed064 <PlayerListPacket::read(BinaryStream&)+0x1fc>
  9ed024:	4a17      	ldr	r2, [pc, #92]	; (9ed084 <PlayerListPacket::read(BinaryStream&)+0x21c>)
  9ed026:	4b18      	ldr	r3, [pc, #96]	; (9ed088 <PlayerListPacket::read(BinaryStream&)+0x220>)
  9ed028:	447a      	add	r2, pc
  9ed02a:	589b      	ldr	r3, [r3, r2]
  9ed02c:	1f0a      	subs	r2, r1, #4
  9ed02e:	b1e3      	cbz	r3, 9ed06a <PlayerListPacket::read(BinaryStream&)+0x202>
  9ed030:	f3bf 8f5b 	dmb	ish
  9ed034:	e852 1f00 	ldrex	r1, [r2]
  9ed038:	1e4b      	subs	r3, r1, #1
  9ed03a:	e842 3700 	strex	r7, r3, [r2]
  9ed03e:	2f00      	cmp	r7, #0
  9ed040:	d1f8      	bne.n	9ed034 <PlayerListPacket::read(BinaryStream&)+0x1cc>
  9ed042:	f3bf 8f5b 	dmb	ish
  9ed046:	2900      	cmp	r1, #0
  9ed048:	dc0c      	bgt.n	9ed064 <PlayerListPacket::read(BinaryStream&)+0x1fc>
  9ed04a:	a921      	add	r1, sp, #132	; 0x84
  9ed04c:	f147 e9ca 	blx	b343e4 <CommandTarget::getCommandTarget(CommandOrigin const&, Entity const*)+0x68>
  9ed050:	4620      	mov	r0, r4
  9ed052:	f4db ebc8 	blx	6c87e4 <_Unwind_Resume@plt>
  9ed056:	4604      	mov	r4, r0
  9ed058:	a812      	add	r0, sp, #72	; 0x48
  9ed05a:	e001      	b.n	9ed060 <PlayerListPacket::read(BinaryStream&)+0x1f8>
  9ed05c:	4604      	mov	r4, r0
  9ed05e:	a804      	add	r0, sp, #16
  9ed060:	f4de e9e0 	blx	6cb424 <PlayerListEntry::~PlayerListEntry()@plt>
  9ed064:	4620      	mov	r0, r4
  9ed066:	f4db ebbe 	blx	6c87e4 <_Unwind_Resume@plt>
  9ed06a:	6811      	ldr	r1, [r2, #0]
  9ed06c:	1e4b      	subs	r3, r1, #1
  9ed06e:	6013      	str	r3, [r2, #0]
  9ed070:	e7e9      	b.n	9ed046 <PlayerListPacket::read(BinaryStream&)+0x1de>
  9ed072:	bf00      	nop
  9ed074:	9c64      	ldr	r4, [sp, #400]	; 0x190
  9ed076:	016c      	lsls	r4, r5, #5
  9ed078:	8854      	ldrh	r4, [r2, #2]
  9ed07a:	ffff 8646 	vcvt.f<illegal width 64>.s<illegal width 64>	q12, q3
  9ed07e:	ffe6 9ba6 			; <UNDEFINED> instruction: 0xffe69ba6
  9ed082:	016c      	lsls	r4, r5, #5
  9ed084:	9b94      	ldr	r3, [sp, #592]	; 0x250
  9ed086:	016c      	lsls	r4, r5, #5
  9ed088:	8858      	ldrh	r0, [r3, #2]
  9ed08a:	ffff 9d08 			; <UNDEFINED> instruction: 0xffff9d08
  9ed08e:	016c      	lsls	r4, r5, #5
  9ed090:	9bde      	ldr	r3, [sp, #888]	; 0x378
  9ed092:	016c      	lsls	r4, r5, #5
  9ed094:	9bcc      	ldr	r3, [sp, #816]	; 0x330
  9ed096:	016c      	lsls	r4, r5, #5
